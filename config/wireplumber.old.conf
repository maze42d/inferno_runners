# WirePlumber daemon context configuration #

context.properties = {
  ## Properties to configure the PipeWire context and some modules

  #application.name = WirePlumber
  log.level = 2
  wireplumber.script-engine = lua-scripting
  #wireplumber.export-core = true

  #mem.mlock-all = false
  #support.dbus  = true
}

context.spa-libs = {
  api.alsa.*      = alsa/libspa-alsa
  #api.bluez5.*    = bluez5/libspa-bluez5
  api.v4l2.*      = v4l2/libspa-v4l2
  api.libcamera.* = libcamera/libspa-libcamera
  audio.convert.* = audioconvert/libspa-audioconvert
  support.*       = support/libspa-support
}

context.modules = [
  # Uses RTKit to boost the data thread priority.
  { name = libpipewire-module-rt
      args = {
          nice.level   = -11
          #rt.prio      = 88
          #rt.time.soft = -1
          #rt.time.hard = -1
      }
      flags = [ ifexists nofail ]
  }

  # The native communication protocol.
  { name = libpipewire-module-protocol-native }

  # Allows creating nodes that run in the context of the
  # client. Is used by all clients that want to provide
  # data to PipeWire.
  { name = libpipewire-module-client-node }

  # Allows creating devices that run in the context of the
  # client. Is used by the session manager.
  { name = libpipewire-module-client-device }

  # Makes a factory for wrapping nodes in an adapter with a
  # converter and resampler.
  { name = libpipewire-module-adapter }

  # Allows applications to create metadata objects. It creates
  # a factory for Metadata objects.
  { name = libpipewire-module-metadata }

  # Provides factories to make session manager objects.
  #{ name = libpipewire-module-session-manager }
]

wireplumber.components = [

  { name = libwireplumber-module-lua-scripting, type = module }

  # The lua configuration file(s)
  # Other components are loaded from there
  { name = main.lua, type = config/lua }
  { name = policy.lua, type = config/lua }
  { name = bluetooth.lua, type = config/lua }
]

wireplumber.profiles = {
    main = {
	monitor.alsa-midi = disabled
    }
}
